C51 COMPILER V9.54   MAIN                                                                  12/24/2023 15:24:08 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\keil5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main.l
                    -st) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <REGX52.H>
   2          #include <stdlib.h>
   3          #include "Delay.h"
   4          #include "MatrixLED.h"
   5          #include "MatrixKey.h"
   6          #include "Timer0.h"
   7          
   8          unsigned char Direction,Length,KeyNum,Speed,Score;
   9          char Snake_x[11] = {0};//蛇身x坐标,理想状态是64，但单片机RAM不够，所以少设一些
  10          char Snake_y[11] = {0};//蛇身y坐标
  11          unsigned char code x[] = {0x7f,0xbf,0xdf,0xef,0xf7,0xfb,0xfd,0xfe};
  12          unsigned char code y[] = {0x80,0x40,0x20,0x10,0x08,0x04,0x02,0x01};
  13          unsigned char Food_x;//食物x坐标
  14          unsigned char Food_y;//食物y坐标
  15          
  16          
  17          unsigned char Independent_Key() //四个独立按键选择模式
  18          {
  19   1        static unsigned char KeyNumber_0;
  20   1        if(P3_1==0){KeyNumber_0=1;} //简单模式
  21   1        if(P3_0==0){KeyNumber_0=2;} //普通模式
  22   1        if(P3_2==0){KeyNumber_0=3;} //困难模式
  23   1        if(P3_3==0){KeyNumber_0=4;} //娱乐模式
  24   1        return KeyNumber_0;
  25   1      }
  26          
  27          
  28          void Snake_move()//蛇身移动
  29          {
  30   1        unsigned char i;
  31   1        for (i = Length + 1; i > 0;i--)
  32   1        {
  33   2            Snake_x[i] = Snake_x[i - 1];//下一次的x坐标为上一次的x坐标，以实现向前挪动
  34   2            Snake_y[i] = Snake_y[i - 1];//同上
  35   2        }
  36   1        switch(Direction)//方向：1:上2:下3:左4:右
  37   1        {
  38   2          case 1:(Snake_y[0])--;break;
  39   2          case 2:(Snake_y[0])++;break;
  40   2          case 3:(Snake_x[0])--;break;
  41   2          case 4:(Snake_x[0])++;break;
  42   2        }
  43   1      }
  44          
  45          
  46          void Direction_key()//检测方向键，控制方向
  47          {
  48   1        if(KeyNum)
  49   1        {
  50   2          switch(KeyNum){
  51   3            case 1:if(Direction != 1)Direction = 2;break;//如果方向不是上，也就是方向为左或右，那么朝下
  52   3            case 2:if(Direction != 2)Direction = 1;break;//同上
  53   3            case 3:if(Direction != 3)Direction = 4;break;//同上
  54   3            case 4:if(Direction != 4)Direction = 3;break;//同上
C51 COMPILER V9.54   MAIN                                                                  12/24/2023 15:24:08 PAGE 2   

  55   3          }     
  56   2        }
  57   1      }
  58          
  59          
  60          void Food_coordinate()//食物坐标
  61          { 
  62   1        Food_x = rand() % 8;
  63   1        Food_y = rand() % 8;
  64   1      }
  65          
  66          
  67          void Refresh() //刷新蛇和食物的位置
  68          {
  69   1        unsigned char i;
  70   1        for(i = 0;i < Length;i++)
  71   1          {
  72   2            MatrixLED_Init();
  73   2            MatrixLED_ShowColumn(x[Snake_x[i]],y[Snake_y[i]]);
  74   2            MatrixLED_Init();
  75   2            MatrixLED_ShowColumn(x[Food_x],y[Food_y]);
  76   2          }
  77   1      }
  78          
  79          
  80          void Eat_food() //判断是否吃到食物
  81          {
  82   1        unsigned char i;
  83   1        for(i = 0;i < Length;i++)
  84   1        {
  85   2          if(Food_x == Snake_x[i] && Food_y == Snake_y[i])
  86   2          {
  87   3            Length++;
  88   3            Food_coordinate();
  89   3            Score++;
  90   3          }
  91   2        }
  92   1      }
  93          
  94          
  95          void Game_over() //游戏结束显示效果
  96          {
  97   1        unsigned char code Animation[] = {
  98   1      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  99   1      0x7E,0x81,0x81,0x89,0x89,0x4E,0x00,0x1F,
 100   1      0x68,0x88,0x68,0x1F,0x00,0xFF,0x40,0x20,
 101   1      0x20,0x40,0xFF,0x00,0xFF,0x91,0x91,0x91,
 102   1      0x91,0x00,0x00,0x7E,0x81,0x81,0x81,0x81,
 103   1      0x7E,0x00,0xF0,0x0E,0x01,0x0E,0xF0,0x00,
 104   1      0xFF,0x91,0x91,0x91,0x91,0x00,0x7F,0x88,
 105   1      0x8C,0x8A,0x71,0x00,0x00,0x00,0x00,0xF2,
 106   1      0x97,0x92,0x02,0xF2,0x12,0x12,0x02,0xF2,
 107   1      0x02,0xF2,0x92,0x92,0x02,0xF2,0x42,0xB2,
 108   1      0x02,0x02,0x02,0xF2,0x02,0x82,0xF2,0x82,
 109   1      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
 110   1      };
 111   1        unsigned char i,Offset = 0,Count = 0;
 112   1        MatrixLED_Init();
 113   1        while(1)
 114   1        {
 115   2          for(i = 0;i < 8;i++)
 116   2          {
C51 COMPILER V9.54   MAIN                                                                  12/24/2023 15:24:08 PAGE 3   

 117   3            MatrixLED_Show_Gameover(i,Animation[i + Offset]);
 118   3          }
 119   2          Count++;
 120   2          if(Count > 4)
 121   2          {
 122   3            Count = 0;
 123   3            Offset++;
 124   3            if(Offset > 88)
 125   3            {
 126   4              Offset = 0;
 127   4            }
 128   3          }
 129   2          if(Score==0){P2_0=1;}
 130   2          if(Score==1){P2_0=0;}
 131   2          if(Score==2){P2_0=0;P2_1=0;}
 132   2          if(Score==3){P2_0=0;P2_1=0;P2_2=0;}
 133   2          if(Score==4){P2_0=0;P2_1=0;P2_2=0;P2_3=0;}
 134   2          if(Score==5){P2_0=0;P2_1=0;P2_2=0;P2_3=0;P2_4=0;}
 135   2          if(Score==6){P2_0=0;P2_1=0;P2_2=0;P2_3=0;P2_4=0;P2_5=0;}
 136   2          if(Score==7){P2_0=0;P2_1=0;P2_2=0;P2_3=0;P2_4=0;P2_5=0;P2_6=0;}
 137   2          if(Score==8){P2_0=0;P2_1=0;P2_2=0;P2_3=0;P2_4=0;P2_5=0;P2_6=0;P2_7=0;}
 138   2        }   
 139   1      }
 140          
 141          
 142          void Snake_death() //判断死亡
 143          {
 144   1        
 145   1        //撞自己
 146   1        unsigned char i;
 147   1        for(i = 4;i < Length;i++)
 148   1        {
 149   2          if(Snake_x[0] == Snake_x[i] && Snake_y[0] == Snake_y[i])
 150   2          {     
 151   3            Game_over();
 152   3          }
 153   2        }
 154   1        
 155   1        //撞墙
 156   1          if(Snake_x[0] < 0 || Snake_x[0] > 7 || Snake_y[0] < 0 || Snake_y[0] > 7)
 157   1          {
 158   2            Game_over();
 159   2          }
 160   1      }
 161          
 162          
 163          void main()
 164          {
 165   1        Length = 2;
 166   1        Direction = 4;
 167   1        Score=-1;
 168   1        while(Independent_Key()==1) //简单模式
 169   1        {
 170   2            Timer0_Init();
 171   2            Speed=200;
 172   2            rand();
 173   2            KeyNum=Key();
 174   2            Direction_key();
 175   2            MatrixLED_Init();
 176   2            Refresh();
 177   2            Eat_food();
 178   2            Snake_death();
C51 COMPILER V9.54   MAIN                                                                  12/24/2023 15:24:08 PAGE 4   

 179   2        }
 180   1        while(Independent_Key()==2) //普通模式
 181   1        {
 182   2            Timer0_Init();
 183   2            Speed=150;
 184   2            rand();
 185   2            KeyNum=Key();
 186   2            Direction_key();
 187   2            MatrixLED_Init();
 188   2            Refresh();
 189   2            Eat_food();
 190   2            Snake_death();
 191   2        }
 192   1        while(Independent_Key()==3) //困难模式
 193   1        {
 194   2            Timer0_Init();
 195   2            Speed=100;
 196   2            rand();
 197   2            KeyNum=Key();
 198   2            Direction_key();
 199   2            MatrixLED_Init();
 200   2            Refresh();
 201   2            Eat_food();
 202   2            Snake_death();
 203   2        }
 204   1        while(Independent_Key()==4) //娱乐模式
 205   1        {
 206   2            Timer0_Init();
 207   2            Speed=150;
 208   2            rand();
 209   2            KeyNum=Key();
 210   2            Direction_key();
 211   2            MatrixLED_Init();
 212   2            Refresh();
 213   2            Eat_food();
 214   2            Snake_death();
 215   2        }
 216   1      }
 217          
 218          
 219          void Routine_Timer0() interrupt 1
 220          {
 221   1        static unsigned int T0_Count1,T0_Count2,T0_Count3;
 222   1        TL0 = 0x18;   
 223   1        TH0 = 0xFC;     
 224   1        //刷新按键
 225   1        T0_Count1++;
 226   1        if(T0_Count1 == 50)
 227   1        {
 228   2          T0_Count1 = 0;
 229   2          Circulate_MatrixKey();
 230   2        }
 231   1        //蛇移动的刷新速度
 232   1        T0_Count2++;
 233   1        if(T0_Count2 == Speed)
 234   1        { 
 235   2          T0_Count2 = 0;
 236   2          Snake_move();
 237   2        }
 238   1        //娱乐模式食物刷新
 239   1        if(Independent_Key() == 4)
 240   1        {
C51 COMPILER V9.54   MAIN                                                                  12/24/2023 15:24:08 PAGE 5   

 241   2          T0_Count3++;
 242   2          if(T0_Count3 == 5000)
 243   2          {
 244   3            T0_Count3 = 0;    
 245   3            Food_coordinate();
 246   3            MatrixLED_ShowColumn(x[Food_x],y[Food_y]);    
 247   3          }
 248   2        }
 249   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    883    ----
   CONSTANT SIZE    =    112    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     36       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
